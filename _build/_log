### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -pp pa_ocaml -modules main.ml > main.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -pp pa_ocaml -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I /usr/lib/ocaml -I /usr/local/lib/ocaml/4.02.3/decap -pp pa_ocaml -o ast.cmo ast.ml # cached
# Target: evaluateur.ml.depends, tags: { extension:ml, file:evaluateur.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -pp pa_ocaml -modules evaluateur.ml > evaluateur.ml.depends # cached
# Target: evaluateur.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:evaluateur.cmo, file:evaluateur.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I /usr/lib/ocaml -I /usr/local/lib/ocaml/4.02.3/decap -pp pa_ocaml -o evaluateur.cmo evaluateur.ml # cached
# Target: parseur.ml.depends, tags: { extension:ml, file:parseur.ml, ocaml, ocamldep, quiet, traverse }
/usr/bin/ocamldep -pp pa_ocaml -modules parseur.ml > parseur.ml.depends
# Target: parseur.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parseur.cmo, file:parseur.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I /usr/lib/ocaml -I /usr/local/lib/ocaml/4.02.3/decap -pp pa_ocaml -o parseur.cmo parseur.ml
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
/usr/bin/ocamlc -c -I /usr/lib/ocaml -I /usr/local/lib/ocaml/4.02.3/decap -pp pa_ocaml -o main.cmo main.ml # cached
# Target: main.byte, tags: { byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
/usr/bin/ocamlc -I /usr/lib/ocaml -I /usr/local/lib/ocaml/4.02.3/decap unix.cma str.cma decap.cma ast.cmo evaluateur.cmo parseur.cmo main.cmo -o main.byte
# Compilation successful.
